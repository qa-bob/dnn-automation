[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_functions = test_*
python_classes = Test*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --html=reports/test_report.html
    --self-contained-html

# Markers
markers =
    smoke: mark a test as a smoke test (critical functionality)
    regression: mark a test as a regression test (full feature testing)
    functional: mark a test as a functional test (feature behavior)
    ui: mark a test as a UI test (user interface testing)
    performance: mark a test as a performance test (speed/load testing)
    cross_browser: mark a test as a cross-browser test (browser compatibility)
    accessibility: mark a test as an accessibility test (a11y compliance)
    negative: mark a test as a negative test (error handling)
    authentication: mark a test as an authentication test (login/security)
    dynamic_content: mark a test as a dynamic content test (changing elements)
    user_interactions: mark a test as a user interactions test (clicks/hovers/etc)
    file_operations: mark a test as a file operations test (upload/download)
    navigation: mark a test as a navigation test (page routing)
    advanced: mark a test as an advanced test (complex scenarios)

# Filtering options
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
